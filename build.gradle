buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.17.6"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.avast.gradle.docker-compose' version '0.17.6'
}

group = 'tbank'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
}

dockerCompose() {
	projectName = 'tbank'
	useComposeFiles = ['docker-compose.yml']
}

jar {
	manifest {
		attributes 'Main-Class': 'tbank.project.ProjectApplication'
	}
}
